-- 11
CREATE VIEW TRANCADAS AS
SELECT	ALUNO.NOME
FROM MATRICULA
INNER JOIN ALUNO ON
		ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
WHERE	MATRICULA.STATUS LIKE ("T%")
GROUP BY	ALUNO.NOME
;
-- 12
CREATE VIEW DISC_SEM_MATRICULAS AS
SELECT	DISCIPLINA.NOME
FROM DISCIPLINA
LEFT JOIN MATRICULA ON
		MATRICULA.ID_DISCIPLINA = DISCIPLINA.ID_DISCIPLINA
WHERE	MATRICULA.ID_DISCIPLINA IS NULL
;
-- 13
CREATE VIEW CONTROLE_STATUS_MATRICULA AS
SELECT	STATUS,
		COUNT(ID_ALUNO)	AS QNT_ALUNO
FROM MATRICULA
GROUP BY	STATUS
;
-- 14
CREATE VIEW CONTROLE_PROF AS
SELECT	ESPECIALIDADE,
		COUNT(ID_PROFESSOR)	AS	QNT_PROF
FROM PROFESSOR
GROUP BY	ESPECIALIDADE
;
-- 15
CREATE VIEW ALUNO_IDADE AS
SELECT	NOME,
        FORMAT((DATEDIFF(CURDATE(), DATA_NASCIMENTO) /365), 0)	AS IDADE
FROM ALUNO
;
-- 16
CREATE VIEW ULTIMA_MATRICULA_ALUNO AS
SELECT	ALUNO.NOME,
		MAX(MATRICULA.DATA_MATRICULA)	AS ULT_MATRICULA
FROM MATRICULA
INNER JOIN ALUNO ON
		ALUNO.ID_ALUNO = MATRICULA.ID_ALUNO
GROUP BY	ALUNO.NOME
;
-- 17
CREATE VIEW DISCIPLINA_CURSO AS
SELECT	DISCIPLINA.NOME AS DISC,
		CURSO.NOME	AS CURSO
FROM	DISCIPLINA
INNER JOIN CURSO ON
		CURSO.ID_CURSO = DISCIPLINA.ID_CURSO
WHERE	CURSO.NOME LIKE 'Engenharia de Software'
;
-- 18
CREATE  VIEW PROFESSORES_SEM_AULA AS
SELECT	PROFESSOR.NOME
FROM TURMA
LEFT JOIN PROFESSOR ON
		PROFESSOR.ID_PROFESSOR = TURMA.ID_PROFESSOR
WHERE	PROFESSOR.ID_PROFESSOR IS NULL
;
-- 19
CREATE VIEW ALUNO_FILTRADA AS
SELECT	NOME,
		CPF,
        EMAIL
FROM ALUNO;
;
-- 20
CREATE VIEW QNT_DISC_PROF AS
SELECT	PROFESSOR.NOME	AS PROFESSOR,
		COUNT(ID_DISCIPLINA)	AS	QNT_DISC
FROM PROFESSOR
INNER JOIN TURMA ON
		TURMA.ID_PROFESSOR = PROFESSOR.ID_PROFESSOR
GROUP BY	PROFESSOR.NOME
;